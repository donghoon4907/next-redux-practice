import type { NextPage } from 'next';
import type { AppState } from '@reducers/index';
import type { HrState } from '@reducers/hr';
import type { UploadState } from '@reducers/upload';
import Head from 'next/head';
import { useState, useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { useDaumPostcodePopup } from 'react-daum-postcode';
import { MySelect } from '@components/select';
import { HR_DETAIL_TABS } from '@constants/tab';
import { MyTab } from '@components/tab';
import { WithLabel } from '@components/WithLabel';
import { MyInput } from '@components/input';
import variables from '@styles/_variables.module.scss';
import { MyLayout } from '@components/Layout';
import { useInput } from '@hooks/use-input';
import { useApi } from '@hooks/use-api';
import { showDepartSearchModal } from '@actions/modal/depart-search.action';
import { getOrgasRequest } from '@actions/hr/get-orgas';
import { MyFooter } from '@components/footer';
import { MyButton } from '@components/button';
import { SelectDepartModal } from '@components/modal/SelectDepart';
import { ImageUploadModal } from '@components/modal/ImageUpload';
import { useSelect } from '@hooks/use-select';
import { showImageUploadModal } from '@actions/modal/image-upload.action';
import { wrapper } from '@store/redux';
import { permissionMiddleware } from '@utils/middleware/permission';
import { IncomeTabpanel } from '@partials/hr/tabpanels/Income';
import { GuaranteeTabpanel } from '@partials/hr/tabpanels/Guarantee';
import { GuaranteeSettingModal } from '@components/modal/GuaranteeSetting';
import { AuthorityTabpanel } from '@partials/hr/tabpanels/Authority';
import { QualManageTabpanel } from '@partials/hr/tabpanels/QualManage';
import { useTab } from '@hooks/use-tab';
import {
    CreateUserRequestPayload,
    createUserRequest,
} from '@actions/hr/create.action';
import { getUsersRequest } from '@actions/hr/get-users';
import { END } from 'redux-saga';
import { POINT_STATUS } from '@constants/options/department';
import { DatePicker } from 'rsuite';
import { useDatepicker } from '@hooks/use-datepicker';

const Depart: NextPage<HrState> = ({ users }) => {
    const displayName = 'wr-pages-hr-detail';

    const dispatch = useDispatch();

    // 우편번호 팝업
    const open = useDaumPostcodePopup();

    const createUser = useApi(createUserRequest);
    // 탭 관리
    const [tab, setTab] = useTab(HR_DETAIL_TABS[0]);
    // 수정 모드 여부
    const [editable, setEditable] = useState(false);
    // 사업부명
    const [name] = useInput('');
    // 전화번호
    const [phone] = useInput('', { isPhone: true });
    // 팩스번호
    const [fax] = useInput('', { isPhone: true });
    // 대표자
    const [manager] = useSelect(users, null);
    // 우편번호
    const [postcode, setPostcode] = useInput('');
    // 주소 검색 1
    const [address1, setAddress1] = useInput('');
    // 주소 검색 상세
    const [address2, setAddress2] = useInput('');
    // 상세 주소
    const [address3] = useInput('');
    // 지점현황
    const [pointStatus] = useSelect(POINT_STATUS, null);
    // 개점일자
    const [openDate, setOpenDate] = useDatepicker(new Date());
    // 양력 or 음력
    // const [birthType] = useSelect(BIRTH_TYPE);

    const handleCompletePostcode = (data: any) => {
        // let fullAddress = data.address;
        let extraAddress = '';
        if (data.addressType === 'R') {
            if (data.bname !== '') {
                extraAddress += data.bname;
            }

            if (data.buildingName !== '') {
                extraAddress +=
                    extraAddress !== ''
                        ? `, ${data.buildingName}`
                        : data.buildingName;
            }

            // fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';
        }

        setPostcode(data.zonecode);

        setAddress1(data.jibunAddress);

        setAddress2(`(${extraAddress})`);
    };

    const handleClickPostcode = () => {
        open({ onComplete: handleCompletePostcode });
    };

    const handleSubmit = () => {
        if (name.value === '') {
            return alert('이름을 입력하세요.');
        }

        // createUser(payload);
    };

    const handleModify = () => {
        setEditable(true);
    };

    const handleCancelModify = () => {
        const tf = confirm('수정을 취소하시겠습니까?');

        if (tf) {
            setEditable(false);
        }
    };

    return (
        <>
            <Head>
                <title>사업부상세</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
            </Head>
            <MyLayout>
                <div className={`${displayName} row`}>
                    <div className={`${displayName}__left col`}>
                        <div className="wr-frame__section">
                            <div className={`${displayName}__block`}>
                                <div className={`${displayName}__content`}>
                                    <div className="row">
                                        <div className="col-6">
                                            <WithLabel
                                                id="name"
                                                label="사업부명"
                                                type="active"
                                            >
                                                <MyInput
                                                    type="text"
                                                    id="name"
                                                    placeholder="사업부명"
                                                />
                                            </WithLabel>
                                        </div>
                                        <div className="col-6">
                                            <div className="wr-ml">
                                                <WithLabel
                                                    id="manager"
                                                    label="대표자"
                                                    type="active"
                                                >
                                                    <MySelect
                                                        placeholder={'선택'}
                                                        placeHolderFontSize={16}
                                                        height={
                                                            variables.detailFilterHeight
                                                        }
                                                        {...manager}
                                                    />
                                                </WithLabel>
                                            </div>
                                        </div>
                                    </div>
                                    <div className="row wr-mt">
                                        <div className="col-6">
                                            <WithLabel
                                                id="phone"
                                                label="전화번호"
                                                type="active"
                                            >
                                                <MyInput
                                                    type="text"
                                                    id="phone"
                                                    placeholder="전화번호"
                                                    {...phone}
                                                />
                                            </WithLabel>
                                        </div>
                                        <div className="col-6">
                                            <div className="wr-ml">
                                                <WithLabel
                                                    id="fax"
                                                    label="팩스번호"
                                                    type="active"
                                                >
                                                    <MyInput
                                                        type="text"
                                                        id="fax"
                                                        placeholder="팩스번호"
                                                        {...fax}
                                                    />
                                                </WithLabel>
                                            </div>
                                        </div>
                                    </div>
                                    <div className="row wr-mt">
                                        <div className="col-6">
                                            <WithLabel
                                                label="주소"
                                                type="active"
                                            >
                                                <div
                                                    className={`${displayName}__with`}
                                                >
                                                    <MyInput
                                                        type="text"
                                                        placeholder="우편번호"
                                                        readOnly
                                                        onClick={
                                                            handleClickPostcode
                                                        }
                                                        {...postcode}
                                                        // button={{
                                                        //     type: 'button',
                                                        //     children: (
                                                        //         <>
                                                        //             <span>
                                                        //                 찾기
                                                        //             </span>
                                                        //         </>
                                                        //     ),
                                                        // }}
                                                    />
                                                </div>
                                            </WithLabel>
                                        </div>
                                        <div className="col-6">
                                            <div className="wr-ml">
                                                <MyInput
                                                    type="text"
                                                    placeholder=""
                                                    readOnly
                                                    {...address1}
                                                />
                                            </div>
                                        </div>
                                    </div>
                                    <div className="row wr-mt">
                                        <div className="col-6">
                                            <WithLabel
                                                id="addr2"
                                                label="상세주소"
                                                type="active"
                                            >
                                                <MyInput
                                                    type="text"
                                                    id="addr2"
                                                    placeholder="상세주소"
                                                    {...address3}
                                                />
                                            </WithLabel>
                                        </div>
                                        <div className="col-6">
                                            <div className="wr-ml">
                                                <MyInput
                                                    type="text"
                                                    placeholder=""
                                                    readOnly
                                                    {...address2}
                                                />
                                            </div>
                                        </div>
                                    </div>
                                    <div className="row wr-mt">
                                        <div className="col-6">
                                            <WithLabel
                                                id="pointStatus"
                                                label="지점현황"
                                                type="active"
                                            >
                                                <MySelect
                                                    inputId="pointStatus"
                                                    placeholder="선택"
                                                    placeHolderFontSize={16}
                                                    height={
                                                        variables.detailFilterHeight
                                                    }
                                                    {...pointStatus}
                                                />
                                            </WithLabel>
                                        </div>
                                        <div className="col-6">
                                            <div className="wr-ml">
                                                <WithLabel
                                                    id="openDate"
                                                    label="개점일자"
                                                    type="active"
                                                >
                                                    <DatePicker
                                                        oneTap
                                                        format="yyyy-MM-dd"
                                                        size="sm"
                                                        placeholder="개점일자"
                                                        placement="bottomEnd"
                                                        {...openDate}
                                                    />
                                                </WithLabel>
                                            </div>
                                        </div>
                                    </div>
                                    <div className="row wr-mt">
                                        <div className="col-6">
                                            <WithLabel
                                                id="pointStatus"
                                                label="폐점일자"
                                                type="active"
                                            >
                                                <MyInput
                                                    type="text"
                                                    id="pointStatus"
                                                    placeholder="폐점일자"
                                                />
                                            </WithLabel>
                                        </div>
                                        <div className="col-6">
                                            <div className="wr-ml">
                                                <WithLabel
                                                    id="orSet"
                                                    label="OR설정"
                                                    type="active"
                                                >
                                                    <MyInput
                                                        type="text"
                                                        id="orSet"
                                                        placeholder="OR설정"
                                                    />
                                                </WithLabel>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div className={`${displayName}__right col`}>
                        <div className="wr-ml position-relative">
                            <ul className="wr-tab__wrap" role="tablist">
                                {HR_DETAIL_TABS.map((v) => (
                                    <MyTab
                                        key={v.id}
                                        onClick={setTab}
                                        isActive={v.id === tab.id}
                                        {...v}
                                    />
                                ))}
                                <li className="wr-tab__line"></li>
                            </ul>
                            <div
                                className={`${displayName}__body wr-frame__tabbody`}
                            >
                                <IncomeTabpanel
                                    id="tabpanelIncome"
                                    tabId="tabIncome"
                                    hidden={tab.id !== 'tabIncome'}
                                    // data={long.pays}
                                    editable={editable}
                                    // addCount={paysAddCount}
                                    // onAddCount={handleIncrementPaysAddCount}
                                />
                                <GuaranteeTabpanel
                                    id="tabpanelGuarantee"
                                    tabId="tabGuarantee"
                                    hidden={tab.id !== 'tabGuarantee'}
                                    // data={long.pays}
                                    editable={editable}
                                    // addCount={paysAddCount}
                                    // onAddCount={handleIncrementPaysAddCount}
                                />
                                <AuthorityTabpanel
                                    id="tabpanelAuthority"
                                    tabId="tabAuthority"
                                    hidden={tab.id !== 'tabAuthority'}
                                    // data={long.pays}
                                    editable={editable}
                                    // addCount={paysAddCount}
                                    // onAddCount={handleIncrementPaysAddCount}
                                />
                                <QualManageTabpanel
                                    id="tabpanelQualManage"
                                    tabId="tabQualManage"
                                    hidden={tab.id !== 'tabQualManage'}
                                    // data={long.pays}
                                    editable={editable}
                                    // addCount={paysAddCount}
                                    // onAddCount={handleIncrementPaysAddCount}
                                />
                            </div>
                        </div>
                    </div>
                </div>
                <MyFooter>
                    <div className="wr-footer__between">
                        <div></div>
                        <div className={`${displayName}__buttons`}>
                            {editable && (
                                <MyButton
                                    className="btn-secondary"
                                    onClick={handleCancelModify}
                                >
                                    취소
                                </MyButton>
                            )}
                            <MyButton
                                type="button"
                                className="btn-primary"
                                onClick={editable ? handleSubmit : handleModify}
                            >
                                {editable ? '변경 사항 적용' : '수정'}
                            </MyButton>
                        </div>
                    </div>
                </MyFooter>
            </MyLayout>
            <SelectDepartModal />
            <ImageUploadModal />
            <GuaranteeSettingModal />
        </>
    );
};

export const getServerSideProps = wrapper.getServerSideProps(
    permissionMiddleware(async ({ dispatch, sagaTask, getState }, ctx) => {
        // const { query } = ctx;

        // const userid = query.userid as string;

        const output: any = {
            props: {},
        };

        dispatch(
            getUsersRequest({
                idx: '1',
            }),
        );

        dispatch(END);

        try {
            await sagaTask?.toPromise();

            const { hr } = getState();

            output.props.users = hr.users;
        } catch {
            output.redirect = {
                destination: '/404',
                permanent: true, // true로 설정하면 301 상태 코드로 리다이렉션
            };
        }

        return output;
    }),
);

export default Depart;

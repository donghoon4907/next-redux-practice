import type { NextPage } from 'next';
import type { AppState } from '@reducers/index';
import type { CoreSelectOption } from '@interfaces/core';
import type { LongState } from '@reducers/long';
import Head from 'next/head';
import { useState } from 'react';
import { useSelector } from 'react-redux';
import { END } from 'redux-saga';
import { MyTable } from '@components/table';
import { wrapper } from '@store/redux';
import { MySelect } from '@components/select';
import { X_SEARCH_FILTERS, X_SEARCH_SELECTS } from '@constants/filter';
import { DateRangePicker } from 'rsuite';
import { MyCheckbox } from '@components/checkbox';
import { MyRadio } from '@components/radio';
import { MyPagination } from '@components/pagination';
import { WithLabel } from '@components/WithLabel';
import { SearchInput } from '@components/input/Search';
import { getLongRequest, getLongSuccess } from '@actions/long/get-long.action';
import { MyLayout } from '@components/Layout';
import { MyFooter } from '@components/footer';
import { useEllipsisColumn } from '@hooks/use-column';

const LongList: NextPage = () => {
    // const dispatch = useDispatch();

    const { long } = useSelector<AppState, LongState>((props) => props.long);

    const columns = useEllipsisColumn(long.fields);

    const [d, setD] = useState<[Date, Date] | null>([
        new Date('2022-02-01'),
        new Date('2022-03-01'),
    ]);

    const [org, setOrg] = useState<CoreSelectOption | null>(null);

    const handleChange = (org: CoreSelectOption | null) => {
        setOrg(org);
    };

    const handleChangeDate = (value: [Date, Date] | null) => {
        setD(value);
    };

    return (
        <>
            <Head>
                <title>장기계약목록</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
            </Head>
            <MyLayout>
                <div className="wr-pages-demo">
                    {/* <Breadcrumb /> */}
                    <div className="wr-search">
                        <div className="row wr-search__inner">
                            <div className="col-6">
                                <div className="row wr-search__filter">
                                    {X_SEARCH_SELECTS[0].map((v, i) => (
                                        <div
                                            className={`col-${v.colspan}`}
                                            key={v.id}
                                        >
                                            <div
                                                className={i > 0 ? 'wr-ml' : ''}
                                            >
                                                <WithLabel
                                                    id={v.id}
                                                    label={v.label}
                                                    type="active"
                                                >
                                                    <MySelect
                                                        inputId={v.id}
                                                        // width={v.width}
                                                        options={v.items}
                                                        value={org}
                                                        onChange={handleChange}
                                                        placeholder={
                                                            v.placeholder
                                                        }
                                                    />
                                                </WithLabel>
                                            </div>
                                        </div>
                                    ))}
                                    {/* <div className="col-4"></div> */}
                                </div>

                                <div className="row wr-mt">
                                    <div className="col-6">
                                        <WithLabel
                                            id="datepicker"
                                            label="기간"
                                            type="active"
                                        >
                                            <DateRangePicker
                                                id="datepicker"
                                                format="yyyy-MM-dd"
                                                placeholder="기간을 입력하세요"
                                                size="sm"
                                                // defaultCalendarValue={[
                                                //     new Date('2022-02-01'),
                                                //     new Date('2022-03-01'),
                                                // ]}
                                                value={d}
                                                onChange={handleChangeDate}
                                                // showMeridian
                                                style={{
                                                    width: 355,
                                                }}
                                            />
                                        </WithLabel>
                                    </div>
                                </div>
                            </div>
                            <div className="col-6">
                                <div className="row">
                                    {X_SEARCH_SELECTS[1].map((v, i) => (
                                        <div
                                            className={`col-${v.colspan}`}
                                            key={v.id}
                                        >
                                            <div className="wr-ml">
                                                <WithLabel
                                                    id={v.id}
                                                    label={v.label}
                                                    type="active"
                                                >
                                                    <MySelect
                                                        inputId={v.id}
                                                        // width={v.width}
                                                        options={v.items}
                                                        value={org}
                                                        onChange={handleChange}
                                                        placeholder={
                                                            v.placeholder
                                                        }
                                                    />
                                                </WithLabel>
                                            </div>
                                        </div>
                                    ))}
                                    <div className="col-6">
                                        <div className="wr-ml">
                                            <WithLabel
                                                id="search"
                                                label={'검색'}
                                                type="disable"
                                            >
                                                <SearchInput
                                                    id="search"
                                                    placeholder="검색어를 입력하세요"
                                                />
                                            </WithLabel>
                                        </div>
                                    </div>
                                </div>
                                <div className="row wr-mt">
                                    <div className="col wr-filter wr-ml">
                                        {X_SEARCH_FILTERS.map(
                                            (filter, index) => {
                                                return (
                                                    <div
                                                        className="wr-filter__block"
                                                        key={`check${index}`}
                                                    >
                                                        {filter.map((v) => {
                                                            if (
                                                                v.type ===
                                                                'checkbox'
                                                            ) {
                                                                return (
                                                                    <MyCheckbox
                                                                        key={
                                                                            v.id
                                                                        }
                                                                        id={
                                                                            v.id
                                                                        }
                                                                        label={
                                                                            v.label
                                                                        }
                                                                    />
                                                                );
                                                            } else if (
                                                                v.type ===
                                                                'radio'
                                                            ) {
                                                                return (
                                                                    <MyRadio
                                                                        key={
                                                                            v.id
                                                                        }
                                                                        id={
                                                                            v.id
                                                                        }
                                                                        label={
                                                                            v.label
                                                                        }
                                                                    />
                                                                );
                                                            } else {
                                                                return null;
                                                            }
                                                        })}
                                                    </div>
                                                );
                                            },
                                        )}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <MyTable
                        columns={columns}
                        data={long.rows}
                        pageSize={long.lastPayload?.nums}
                    />

                    <MyFooter>
                        <MyPagination
                            requestAction={getLongRequest}
                            successAction={getLongSuccess}
                            payload={long.lastPayload}
                            total={long.total.count}
                        >
                            <span>
                                건수: {long.total.count.toLocaleString()}
                            </span>
                            <span>
                                실적보험료계: {long.total.pay.toLocaleString()}
                            </span>
                            <span>
                                수정보험료계: {long.total.tp.toLocaleString()}
                            </span>
                        </MyPagination>
                    </MyFooter>
                </div>
            </MyLayout>
        </>
    );
};

export const getServerSideProps = wrapper.getServerSideProps(
    ({ dispatch, sagaTask }) =>
        async (_) => {
            dispatch(
                getLongRequest({
                    condition: {
                        paydate: ['2023-06-01', '2023-06-30'],
                    },
                    page: 1,
                    nums: 25,
                    successAction: getLongSuccess,
                }),
            );

            dispatch(END);

            await sagaTask?.toPromise();

            return {
                props: {},
            };
        },
);

export default LongList;

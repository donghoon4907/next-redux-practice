import {
    getPostsRequest,
    getPostsSuccess,
} from '@actions/board/get-posts.action';
import { MyLayout } from '@components/Layout';
import { WithLabel } from '@components/WithLabel';
import { MyButton } from '@components/button';
import { MyFooter } from '@components/footer';
import { SearchInput } from '@components/input/Search';
import { MyPagination } from '@components/pagination';
import { MySelect } from '@components/select';
import { MyTable } from '@components/table';
import { useColumn } from '@hooks/use-column';
import { useTab } from '@hooks/use-tab';
import { BoardState } from '@reducers/board';
import { AppState } from '@reducers/index';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useSelector } from 'react-redux';

const Boards: NextPage = () => {
    const { boards } = useSelector<AppState, BoardState>(
        (props) => props.board,
    );

    const columns = useColumn(boards.fields);

    const tab = useTab();

    const handleClickRow = (row: any) => {
        tab.fire(
            `board${row.idx}`,
            `게시글(${row.title})`,
            `/board/${row.idx}`,
        );
    };

    const handleCreatePost = () => {
        tab.fire(`create-board`, `게시물 등록`, `/board/create`);
    };

    return (
        <>
            <Head>
                <title>게시판</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
            </Head>
            <MyLayout>
                <div className="wr-pages-board-list">
                    <div className="wr-pages-board-list__header">
                        <div className="row">
                            <div className="col-6">
                                <MyButton
                                    className="btn-primary"
                                    onClick={handleCreatePost}
                                >
                                    글 쓰기
                                </MyButton>
                            </div>
                            <div className="col-6">
                                <div className="row">
                                    <div className="col-6"></div>
                                    <div className="col-6">
                                        <div className="wr-ml">
                                            <WithLabel
                                                id="search"
                                                label="검색"
                                                type="active"
                                            >
                                                <div style={{ width: 250 }}>
                                                    <MySelect
                                                        inputId="orga"
                                                        options={[]}
                                                        value={null}
                                                        onChange={() => {}}
                                                        placeholder="제목 + 내용"
                                                    />
                                                </div>

                                                <SearchInput
                                                    id="search"
                                                    className="wr-border-l--hide"
                                                    placeholder="검색어를 입력하세요"
                                                    // {...search}
                                                    // onSearch={handleSearch}
                                                />
                                            </WithLabel>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <MyTable
                        columns={columns}
                        data={boards.rows}
                        pageSize={boards.lastPayload?.nums}
                        onClickRow={handleClickRow}
                    />
                    <MyFooter>
                        <MyPagination
                            requestAction={getPostsRequest}
                            successAction={getPostsSuccess}
                            payload={boards.lastPayload}
                            total={boards.total.count}
                        >
                            <span>
                                건수: {boards.total.count.toLocaleString()}
                            </span>
                        </MyPagination>
                    </MyFooter>
                </div>
            </MyLayout>
        </>
    );
};

export async function getServerSideProps() {
    return {
        props: {},
    };
}

export default Boards;

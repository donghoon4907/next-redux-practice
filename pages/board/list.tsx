import type { NextPage } from 'next';
import Head from 'next/head';
import { useSelector } from 'react-redux';
import { END } from 'redux-saga';
import { MyLayout } from '@components/Layout';
import { MyFooter } from '@components/footer';
import { MyPagination } from '@components/pagination';
import { MyTable } from '@components/table';
import { useColumn } from '@hooks/use-column';
// import { useLinkTab } from '@hooks/use-tab';
import { BoardSearchFilterTemplate } from '@partials/board/template/SearchFilter';
import { BoardState } from '@reducers/board';
import { AppState } from '@reducers/index';
import { wrapper } from '@store/redux';

const Boards: NextPage = () => {
    const displayName = 'wr-pages-list';

    const { boards } = useSelector<AppState, BoardState>(
        (props) => props.board,
    );

    const columns = useColumn(boards.fields);

    // const tab = useLinkTab();

    const handleClickRow = (row: any) => {
        // tab.fire(`board${row.idx}`, `게시글(${row.idx})`, `/board/${row.idx}`);
        alert('준비중입니다');
    };

    const handleCreatePost = () => {
        // tab.fire(`create-board`, `게시물 등록`, `/board/create`);
    };

    return (
        <>
            <Head>
                <title>우리인슈맨라이프</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
            </Head>
            <MyLayout>
                <div className={displayName}>
                    <div className={`${displayName}__header`}>
                        <BoardSearchFilterTemplate />
                    </div>
                    <div className={`${displayName}__body wr-mt`}>
                        <div className="wr-table--scrollable wr-table--hover">
                            <MyTable
                                columns={columns}
                                data={boards.rows}
                                pageSize={boards.lastPayload?.nums}
                                onClickRow={handleClickRow}
                            />
                        </div>
                    </div>

                    <MyFooter>
                        <MyPagination
                            // requestAction={getPostsRequest}
                            // successAction={getPostsSuccess}
                            // payload={boards.lastPayload}
                            total={boards.total.count}
                        >
                            <span>
                                건수: {boards.total.count.toLocaleString()}
                            </span>
                        </MyPagination>
                    </MyFooter>
                </div>
            </MyLayout>
        </>
    );
};

export const getServerSideProps = wrapper.getServerSideProps(
    ({ dispatch, sagaTask }) =>
        async (_) => {
            dispatch(END);

            await sagaTask?.toPromise();

            return {
                props: {},
            };
        },
);

export default Boards;
